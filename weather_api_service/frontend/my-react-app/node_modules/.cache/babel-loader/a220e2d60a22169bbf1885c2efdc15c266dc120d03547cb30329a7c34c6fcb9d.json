{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import logo from'./logo.svg';import'./App.css';import data from\"./data/country_data.json\";import Select from'react-select';import{Forecast}from'./components/forecast';import{Component,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.state={returnedValue:''};_this.select=false;return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;/*#__PURE__*/(function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(selectedOptions){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://127.0.0.1:5900/forecast/\".concat(selectedOptions.name,\"/5\"),{method:\"get\"}).then(function(res){return res.json();}).then(function(data){_this2.select=true;_this2.setState({returnedValue:data});});case 2:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};})();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(Select,{options:data,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionValue:function getOptionValue(option){return option.geonameid;}// It should be unique value in the options. E.g. ID\n,placeholder:'Enter a city to find it\\'s weather',onChange:this.componentDidMount}),this.select&&/*#__PURE__*/_jsx(Forecast,{forecast:this.state.returned})]})});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["logo","data","Select","Forecast","Component","useState","App","state","returnedValue","select","selectedOptions","fetch","name","method","then","res","json","setState","option","geonameid","componentDidMount","returned"],"sources":["/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport data from \"./data/country_data.json\"\nimport Select from 'react-select';\nimport { Forecast } from './components/forecast';\nimport { Component, useState } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      returnedValue: ''\n    }\n    this.select = false\n  }\n  componentDidMount(){\n\n    async (selectedOptions) => {\n      await fetch(`http://127.0.0.1:5900/forecast/${selectedOptions.name}/5`, {\n          method: \"get\"\n      }).then(res => res.json())\n      .then((data) => {\n        this.select = true\n        this.setState({returnedValue: data});\n      });\n    }\n  };\n  \nrender(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Select\n        options={data}\n        getOptionLabel={(option) => option.name}\n        getOptionValue={(option) => option.geonameid} // It should be unique value in the options. E.g. ID\n        placeholder = {'Enter a city to find it\\'s weather'}\n        onChange={this.componentDidMount}\n      />\n      {this.select && <Forecast forecast={this.state.returned}/>}\n      </header>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n"],"mappings":"8pCAAA,MAAOA,KAAI,KAAM,YAAY,CAC7B,MAAO,WAAW,CAClB,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,OAAM,KAAM,cAAc,CACjC,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,2FAEtCC,IAAG,0FACP,cAAc,qCACZ,wBAEA,MAAKC,KAAK,CAAG,CACXC,aAAa,CAAE,EACjB,CAAC,CACD,MAAKC,MAAM,CAAG,KAAK,cACrB,CAAC,iDACD,4BAAmB,iBAEjB,6GAAOC,eAAe,yIACdC,MAAK,0CAAmCD,eAAe,CAACE,IAAI,OAAM,CACpEC,MAAM,CAAE,KACZ,CAAC,CAAC,CAACC,IAAI,CAAC,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GAAC,CACzBF,IAAI,CAAC,SAACb,IAAI,CAAK,CACd,MAAI,CAACQ,MAAM,CAAG,IAAI,CAClB,MAAI,CAACQ,QAAQ,CAAC,CAACT,aAAa,CAAEP,IAAI,CAAC,CAAC,CACtC,CAAC,CAAC,sDACH,gEACH,CAAC,sBAEH,iBAAQ,CACN,mBACE,YAAK,SAAS,CAAC,KAAK,uBAClB,gBAAQ,SAAS,CAAC,YAAY,wBAC9B,KAAC,MAAM,EACL,OAAO,CAAEA,IAAK,CACd,cAAc,CAAE,wBAACiB,MAAM,QAAKA,OAAM,CAACN,IAAI,EAAC,CACxC,cAAc,CAAE,wBAACM,MAAM,QAAKA,OAAM,CAACC,SAAS,EAAE;AAAA,CAC9C,WAAW,CAAI,oCAAqC,CACpD,QAAQ,CAAE,IAAI,CAACC,iBAAkB,EACjC,CACD,IAAI,CAACX,MAAM,eAAI,KAAC,QAAQ,EAAC,QAAQ,CAAE,IAAI,CAACF,KAAK,CAACc,QAAS,EAAE,GACjD,EAEL,CAEV,CAAC,iBAtCiBjB,SAAS,EAyC3B,cAAeE,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}