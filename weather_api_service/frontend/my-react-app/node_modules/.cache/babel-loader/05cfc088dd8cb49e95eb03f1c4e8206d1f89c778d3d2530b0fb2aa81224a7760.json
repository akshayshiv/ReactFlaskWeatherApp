{"ast":null,"code":"import _slicedToArray from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import Table from'@mui/material/Table';import TableBody from'@mui/material/TableBody';import TableCell from'@mui/material/TableCell';import TableContainer from'@mui/material/TableContainer';import TableHead from'@mui/material/TableHead';import TableRow from'@mui/material/TableRow';import Paper from'@mui/material/Paper';import Switch from'@mui/material/Switch';import FormControlLabel from'@mui/material/FormControlLabel';import{useState}from'react';import Box from'@mui/material/Box';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var style={color:\"black\",fontFamily:\"Arial\"};var tableStyle={padding:\"1px\",borderCollapse:\"collapse\",borderSpacing:\"0\",width:\"50%\",float:\"left\"};var hourlyTable={fontSize:\"12px\",borderCollapse:\"collapse\",borderSpacing:\"0\",width:\"50%\",float:\"right\",padding:\"0\",textAlign:\"center\"};var row={marginLeft:\"-5px\",marginRight:\"-5px\"};export var Forecast=function Forecast(_ref){var forecast=_ref.forecast;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),fahrenheit=_useState2[0],setFahrenheit=_useState2[1];var handleChangeFahrenheit=function handleChangeFahrenheit(event){fahrenheit=!fahrenheit;setFahrenheit(event.target.checked);};var arr=forecast.forecast.forecastday[0].hour;arr=[arr[0],arr[3],arr[6],arr[9],arr[12],arr[15],arr[18],arr[21]];return/*#__PURE__*/_jsx(\"div\",{style:style,children:/*#__PURE__*/_jsxs(\"div\",{class:row,children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Today's weather in \",forecast.location.name,\", \",forecast.location.region]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{sx:{maxWidth:300},\"aria-label\":\"simple table\",style:tableStyle,children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(\"img\",{src:forecast.current.condition.icon}),/*#__PURE__*/_jsx(\"p\",{children:forecast.current.condition.text})]}),/*#__PURE__*/_jsxs(TableRow,{children:[\"Sunrise: \",forecast.forecast.forecastday[0].astro.sunrise]}),/*#__PURE__*/_jsxs(TableRow,{children:[\"Sunset: \",forecast.forecast.forecastday[0].astro.sunset]}),/*#__PURE__*/_jsxs(TableRow,{children:[\"Moonrise: \",forecast.forecast.forecastday[0].astro.moonrise]}),/*#__PURE__*/_jsxs(TableRow,{children:[\"Moonset: \",forecast.forecast.forecastday[0].astro.moonset]})]})}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(TableContainer,{component:Paper,children:[/*#__PURE__*/_jsxs(Table,{sx:{maxWidth:300},\"aria-label\":\"simple table\",style:hourlyTable,children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Time\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Weather\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Temperature(Feels Like)\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Humidity\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Wind Speed (MPH)\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:arr.map(function(hour){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:hour.time}),/*#__PURE__*/_jsxs(TableCell,{children:[\" \",/*#__PURE__*/_jsx(\"img\",{src:hour.condition.icon})]}),/*#__PURE__*/_jsxs(TableCell,{children:[fahrenheit?hour.temp_f:hour.temp_c,\"\\xB0\"]}),/*#__PURE__*/_jsxs(TableCell,{children:[hour.humidity,\"%\"]}),/*#__PURE__*/_jsx(TableCell,{children:hour.wind_mph})]},hour.time);})})]}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:fahrenheit,onChange:handleChangeFahrenheit}),label:\"Fahrenheit/Celsius\"})]})})]})});};","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Switch","FormControlLabel","useState","Box","style","color","fontFamily","tableStyle","padding","borderCollapse","borderSpacing","width","float","hourlyTable","fontSize","textAlign","row","marginLeft","marginRight","Forecast","forecast","fahrenheit","setFahrenheit","handleChangeFahrenheit","event","target","checked","arr","forecastday","hour","location","name","region","maxWidth","current","condition","icon","text","astro","sunrise","sunset","moonrise","moonset","map","time","temp_f","temp_c","humidity","wind_mph"],"sources":["/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/src/components/forecast.js"],"sourcesContent":["import React from \"react\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { useState } from 'react';\nimport Box from '@mui/material/Box';\n\n\nconst style = {\n    color: \"black\",\n    fontFamily: \"Arial\",\n\n  };\n  const tableStyle = {\n    padding: \"1px\",\n    borderCollapse:  \"collapse\",\n    borderSpacing: \"0\",\n    width: \"50%\",\n    float:\"left\"\n  };\n  \n  const hourlyTable = {\n    fontSize: \"12px\",\n    borderCollapse:  \"collapse\",\n    borderSpacing: \"0\",\n    width: \"50%\",\n    float:\"right\",\n    padding: \"0\",\n    textAlign:\"center\"\n\n  };\n\n  const row = {\n    marginLeft:\"-5px\",\n    marginRight:\"-5px\",\n  }\n\n  \n\nexport const Forecast = ({forecast}) => {\n    \n    let [fahrenheit, setFahrenheit] = useState(true);\n    const handleChangeFahrenheit = (event) => {\n        fahrenheit = !fahrenheit\n        setFahrenheit(event.target.checked);\n      };\n\n    let arr = forecast.forecast.forecastday[0].hour\n    arr = [arr[0], arr[3], arr[6], arr[9], arr[12], arr[15], arr[18], arr[21]]\n    return (\n        <div style={style}>\n            <div class = {row}>\n                    <h2>Today's weather in {forecast.location.name}, {forecast.location.region}</h2>\n                    <TableContainer component = {Paper}>\n                    <Table sx={{ maxWidth: 300 }} aria-label=\"simple table\" style = {tableStyle}>\n                        <TableRow><img src = {forecast.current.condition.icon}/><p>{forecast.current.condition.text}</p></TableRow>\n                        <TableRow>Sunrise: {forecast.forecast.forecastday[0].astro.sunrise}</TableRow>\n                        <TableRow>Sunset: {forecast.forecast.forecastday[0].astro.sunset}</TableRow>\n                        <TableRow>Moonrise: {forecast.forecast.forecastday[0].astro.moonrise}</TableRow>\n                        <TableRow>Moonset: {forecast.forecast.forecastday[0].astro.moonset}</TableRow>\n                    </Table>\n                    </TableContainer>\n                    \n            <Box>\n                <TableContainer component = {Paper}>\n                <Table sx={{ maxWidth: 300 }} aria-label=\"simple table\" style = {hourlyTable}>\n                    <TableHead>\n                    <TableRow>\n                            <TableCell>Time</TableCell>\n                            <TableCell>Weather</TableCell>\n                            <TableCell>Temperature(Feels Like)</TableCell>\n                            <TableCell>Humidity</TableCell>\n                            <TableCell>Wind Speed (MPH)</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {arr.map(hour => (\n                            <TableRow key={hour.time}>\n                                <TableCell>{hour.time}</TableCell>\n                                <TableCell> <img src = {hour.condition.icon}/></TableCell>\n                                <TableCell>{fahrenheit? hour.temp_f : hour.temp_c }Â°</TableCell>\n                                <TableCell>{hour.humidity}%</TableCell>\n                                <TableCell>{hour.wind_mph}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <FormControlLabel\n        control={<Switch checked={fahrenheit} onChange={handleChangeFahrenheit} />}\n        label=\"Fahrenheit/Celsius\"\n      />\n                </TableContainer>\n                </Box>\n            </div>\n            \n    </div>\n            \n       \n        \n    )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}