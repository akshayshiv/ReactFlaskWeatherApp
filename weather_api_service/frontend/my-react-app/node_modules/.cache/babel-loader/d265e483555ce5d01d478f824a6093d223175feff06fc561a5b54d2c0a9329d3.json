{"ast":null,"code":"import React from\"react\";import TableBody from'@mui/material/TableBody';import TableCell from'@mui/material/TableCell';import TableRow from'@mui/material/TableRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TableCreation=function TableCreation(_ref){var forecast=_ref.forecast,temp=_ref.temp;return/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{sx:{maxWidth:300},\"aria-label\":\"simple table\",style:tableStyle,children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Weather\"}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(\"div\",{children:\"Temperature\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:fahrenheit,onChange:handleChangeFahrenheit}),label:\"F/C\"})]}),/*#__PURE__*/_jsx(TableCell,{children:\"Humidity\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Wind Speed (MPH)\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:forecast.forecastday.map(function(day){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:day.date}),/*#__PURE__*/_jsxs(TableCell,{children:[\" \",/*#__PURE__*/_jsx(\"img\",{src:day.day.condition.icon})]}),/*#__PURE__*/_jsxs(TableCell,{children:[temp?\"\".concat(day.day.maxtemp_f,\"/\").concat(day.day.mintemp_f):\"\".concat(day.day.maxtemp_c,\"/\").concat(day.day.mintemp_c),\"\\xB0\"]}),/*#__PURE__*/_jsxs(TableCell,{children:[day.day.avghumidity,\"%\"]}),/*#__PURE__*/_jsx(TableCell,{children:day.day.maxwind_mph})]},day.date);})})]})});};","map":{"version":3,"names":["React","TableBody","TableCell","TableRow","TableCreation","forecast","temp","Paper","maxWidth","tableStyle","fahrenheit","handleChangeFahrenheit","forecastday","map","day","date","condition","icon","maxtemp_f","mintemp_f","maxtemp_c","mintemp_c","avghumidity","maxwind_mph"],"sources":["/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/src/components/table.js"],"sourcesContent":["import React from \"react\";\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\n\nexport const TableCreation = ({forecast, temp}) => {\n    return (\n        <TableContainer component = {Paper}>\n            <Table sx={{ maxWidth: 300 }} aria-label=\"simple table\" style = {tableStyle}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Date</TableCell>\n                        <TableCell>Weather</TableCell>\n                        <TableCell>\n                            <div>Temperature</div> \n                                <FormControlLabel\n                                control={<Switch checked={fahrenheit} onChange={handleChangeFahrenheit} />}\n                                label=\"F/C\"\n                                />\n                            \n                            </TableCell>\n                        <TableCell>Humidity</TableCell>\n                        <TableCell>Wind Speed (MPH)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {forecast.forecastday.map(day => (\n                        <TableRow key={day.date}>\n                            <TableCell>{day.date}</TableCell>\n                            <TableCell> <img src = {day.day.condition.icon}/></TableCell>\n                            <TableCell>{ temp ? `${day.day.maxtemp_f}/${day.day.mintemp_f}`: `${day.day.maxtemp_c}/${day.day.mintemp_c}`}Â°</TableCell>\n                            <TableCell>{day.day.avghumidity}%</TableCell>\n                            <TableCell>{day.day.maxwind_mph}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n                \n            </Table>\n            \n            </TableContainer>\n    )\n}"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,UAAS,KAAM,yBAAyB,CAC/C,MAAOC,UAAS,KAAM,yBAAyB,CAC/C,MAAOC,SAAQ,KAAM,wBAAwB,CAAC,wFAE9C,MAAO,IAAMC,cAAa,CAAG,QAAhBA,cAAa,MAAyB,IAApBC,SAAQ,MAARA,QAAQ,CAAEC,IAAI,MAAJA,IAAI,CACzC,mBACI,KAAC,cAAc,EAAC,SAAS,CAAIC,KAAM,uBAC/B,MAAC,KAAK,EAAC,EAAE,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAC,aAAW,cAAc,CAAC,KAAK,CAAIC,UAAW,wBACxE,KAAC,SAAS,wBACN,MAAC,QAAQ,yBACL,KAAC,SAAS,WAAC,MAAI,EAAY,cAC3B,KAAC,SAAS,WAAC,SAAO,EAAY,cAC9B,MAAC,SAAS,yBACN,qBAAK,aAAW,EAAM,cAClB,KAAC,gBAAgB,EACjB,OAAO,cAAE,KAAC,MAAM,EAAC,OAAO,CAAEC,UAAW,CAAC,QAAQ,CAAEC,sBAAuB,EAAI,CAC3E,KAAK,CAAC,KAAK,EACT,GAEM,cAChB,KAAC,SAAS,WAAC,UAAQ,EAAY,cAC/B,KAAC,SAAS,WAAC,kBAAgB,EAAY,GAChC,EACH,cACZ,KAAC,SAAS,WACLN,QAAQ,CAACO,WAAW,CAACC,GAAG,CAAC,SAAAC,GAAG,qBACzB,MAAC,QAAQ,yBACL,KAAC,SAAS,WAAEA,GAAG,CAACC,IAAI,EAAa,cACjC,MAAC,SAAS,YAAC,GAAC,0BAAK,GAAG,CAAID,GAAG,CAACA,GAAG,CAACE,SAAS,CAACC,IAAK,EAAE,GAAY,cAC7D,MAAC,SAAS,YAAGX,IAAI,WAAMQ,GAAG,CAACA,GAAG,CAACI,SAAS,aAAIJ,GAAG,CAACA,GAAG,CAACK,SAAS,YAAOL,GAAG,CAACA,GAAG,CAACM,SAAS,aAAIN,GAAG,CAACA,GAAG,CAACO,SAAS,CAAE,CAAC,MAAC,GAAY,cAC1H,MAAC,SAAS,YAAEP,GAAG,CAACA,GAAG,CAACQ,WAAW,CAAC,GAAC,GAAY,cAC7C,KAAC,SAAS,WAAER,GAAG,CAACA,GAAG,CAACS,WAAW,EAAa,GALjCT,GAAG,CAACC,IAAI,CAMZ,EACd,CAAC,EACM,GAER,EAES,CAE7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}