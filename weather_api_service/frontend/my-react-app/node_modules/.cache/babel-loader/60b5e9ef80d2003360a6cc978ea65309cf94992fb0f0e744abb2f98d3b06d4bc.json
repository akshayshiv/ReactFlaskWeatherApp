{"ast":null,"code":"import{useState}from\"React\";import data from\"./data/country_data.json\";import Select from'react-select';import{jsx as _jsx}from\"react/jsx-runtime\";export default function SearchBar(){var _this=this;//  [query, setquery] = useState('')\n//  handleChange = (e) => {\n//     (e.target.value)\n// }\n// return (\n// <div>\n//     <form>\n// <       input type=\"search\" value={query} onChange={handleChange}/>\n//     </form>\n// </div>\n// )\nvar handleChange=function handleChange(selectedOptions){var api_url=\"http://api.weatherapi.com/v1/forecast.json?key=dc83cf84d30c434599164146232101&q=\".concat(selectedOptions,\"&days=5\");axios.get(api_url).then(function(res){var persons=res.data;_this.setState({persons:persons});});};return/*#__PURE__*/_jsx(Select,{options:data,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionValue:function getOptionValue(option){return option.geonameid;}// It should be unique value in the options. E.g. ID\n,placeholder:'Enter a city to find it\\'s weather',onChange:handleChange});}// render(){\n//     const styleInfo = {\n//       paddingRight:'10px'\n//     }\n//     const items = data.map(data=>{\n//       return(\n//       <div>\n//         <ul>\n//           <li style={{position:'relative',left:'10vh'}}>\n//             <span style={styleInfo}>{data.name, data.country}</span>\n//           </li>\n//         </ul>\n//       </div>\n//       )\n//     })","map":{"version":3,"names":["useState","data","Select","SearchBar","handleChange","selectedOptions","api_url","axios","get","then","res","persons","setState","option","name","geonameid"],"sources":["/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/src/SearchBar.js"],"sourcesContent":["import { useState } from \"React\"\nimport data from \"./data/country_data.json\"\nimport Select from 'react-select';\n\nexport default function SearchBar() {\n    //  [query, setquery] = useState('')\n    //  handleChange = (e) => {\n    //     (e.target.value)\n    // }\n    // return (\n    // <div>\n    //     <form>\n    // <       input type=\"search\" value={query} onChange={handleChange}/>\n    //     </form>\n    // </div>\n    // )\n    \n    const handleChange = (selectedOptions) => {\n    const api_url = `http://api.weatherapi.com/v1/forecast.json?key=dc83cf84d30c434599164146232101&q=${selectedOptions}&days=5`\n    axios.get(api_url)\n      .then(res => {\n        const persons = res.data;\n        this.setState({ persons });\n      })\n    }\n    return (\n        <Select\n          options={data}\n          getOptionLabel={(option) => option.name}\n          getOptionValue={(option) => option.geonameid} // It should be unique value in the options. E.g. ID\n          placeholder = {'Enter a city to find it\\'s weather'}\n          onChange={handleChange}\n        />\n    )\n}\n\n// render(){\n//     const styleInfo = {\n//       paddingRight:'10px'\n//     }\n//     const items = data.map(data=>{\n//       return(\n//       <div>\n//         <ul>\n//           <li style={{position:'relative',left:'10vh'}}>\n//             <span style={styleInfo}>{data.name, data.country}</span>\n            \n//           </li>\n//         </ul>\n//       </div>\n//       )\n//     })\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,OAAM,KAAM,cAAc,CAAC,2CAElC,cAAe,SAASC,UAAS,EAAG,gBAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,eAAe,CAAK,CAC1C,GAAMC,QAAO,2FAAsFD,eAAe,WAAS,CAC3HE,KAAK,CAACC,GAAG,CAACF,OAAO,CAAC,CACfG,IAAI,CAAC,SAAAC,GAAG,CAAI,CACX,GAAMC,QAAO,CAAGD,GAAG,CAACT,IAAI,CACxB,KAAI,CAACW,QAAQ,CAAC,CAAED,OAAO,CAAPA,OAAQ,CAAC,CAAC,CAC5B,CAAC,CAAC,CACJ,CAAC,CACD,mBACI,KAAC,MAAM,EACL,OAAO,CAAEV,IAAK,CACd,cAAc,CAAE,wBAACY,MAAM,QAAKA,OAAM,CAACC,IAAI,EAAC,CACxC,cAAc,CAAE,wBAACD,MAAM,QAAKA,OAAM,CAACE,SAAS,EAAE;AAAA,CAC9C,WAAW,CAAI,oCAAqC,CACpD,QAAQ,CAAEX,YAAa,EACvB,CAEV,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}