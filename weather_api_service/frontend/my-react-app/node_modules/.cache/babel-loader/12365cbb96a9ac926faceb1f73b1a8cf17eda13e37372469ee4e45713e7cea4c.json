{"ast":null,"code":"import{useState}from\"React\";import data from\"./data/country_data.json\";import Select from'react-select';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export default function SearchBar(){//const [notes, getNotes] = useState()\n//  handleChange = (e) => {\n//     (e.target.value)\n// }\n// return (\n// <div>\n//     <form>\n// <       input type=\"search\" value={query} onChange={handleChange}/>\n//     </form>\n// </div>\n// )\n// let data = null;\nvar handleChange=function handleChange(selectedOptions){fetch('http://127.0.0.1:5900/forecast',{method:\"get\",body:JSON.stringify({city:selectedOptions.name})}).then(function(res){return res.json();}).then(function(data){console.log(data);});};// componentDidMount() {\n//     fetch('http://127.0.0.1:5900/forecast')\n//         .then((response) => response.json())\n//         .then((data) => {\n//             console.log(data);\n//             this.setState({\n//                 information: data.data,\n//             });\n//         })\n//         .catch((error) => console.log(error))   \n// }\n// const handleChange = (selectedOptions) => {\n//     const api_url = `http://api.weatherapi.com/v1/forecast.json?key=dc83cf84d30c434599164146232101&q=${selectedOptions.name}&days=5`\n//     axios.get(api_url)\n//     .then(res => {\n//         data = res.data\n//     })\n// }\nreturn/*#__PURE__*/_jsx(Select,{options:data,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionValue:function getOptionValue(option){return option.geonameid;}// It should be unique value in the options. E.g. ID\n,placeholder:'Enter a city to find it\\'s weather',onChange:handleChange});}","map":{"version":3,"names":["useState","data","Select","axios","SearchBar","handleChange","selectedOptions","fetch","method","body","JSON","stringify","city","name","then","res","json","console","log","option","geonameid"],"sources":["/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/src/SearchBar.js"],"sourcesContent":["import { useState } from \"React\"\nimport data from \"./data/country_data.json\"\nimport Select from 'react-select';\nimport axios from 'axios'\n\nexport default function SearchBar() {\n    //const [notes, getNotes] = useState()\n    //  handleChange = (e) => {\n    //     (e.target.value)\n    // }\n    // return (\n    // <div>\n    //     <form>\n    // <       input type=\"search\" value={query} onChange={handleChange}/>\n    //     </form>\n    // </div>\n    // )\n    // let data = null;\n    const handleChange = (selectedOptions) => {\n        fetch('http://127.0.0.1:5900/forecast', {\n            method: \"get\",\n            body: JSON.stringify({\n                city: selectedOptions.name,\n            })\n        }).then(res => res.json())\n        .then((data) => {\n            console.log(data)\n        });\n    }\n\n    // componentDidMount() {\n    //     fetch('http://127.0.0.1:5900/forecast')\n    //         .then((response) => response.json())\n    //         .then((data) => {\n    //             console.log(data);\n    //             this.setState({\n    //                 information: data.data,\n    //             });\n    //         })\n    //         .catch((error) => console.log(error))   \n    // }\n    // const handleChange = (selectedOptions) => {\n    //     const api_url = `http://api.weatherapi.com/v1/forecast.json?key=dc83cf84d30c434599164146232101&q=${selectedOptions.name}&days=5`\n    //     axios.get(api_url)\n\n    //     .then(res => {\n    //         data = res.data\n    //     })\n    // }\n    return (\n        <Select\n          options={data}\n          getOptionLabel={(option) => option.name}\n          getOptionValue={(option) => option.geonameid} // It should be unique value in the options. E.g. ID\n          placeholder = {'Enter a city to find it\\'s weather'}\n          onChange={handleChange}\n        />\n       \n        \n    )\n}\n\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,OAAM,KAAM,cAAc,CACjC,MAAOC,MAAK,KAAM,OAAO,4CAEzB,cAAe,SAASC,UAAS,EAAG,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,eAAe,CAAK,CACtCC,KAAK,CAAC,gCAAgC,CAAE,CACpCC,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBC,IAAI,CAAEN,eAAe,CAACO,IAC1B,CAAC,CACL,CAAC,CAAC,CAACC,IAAI,CAAC,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GAAC,CACzBF,IAAI,CAAC,SAACb,IAAI,CAAK,CACZgB,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC,CACrB,CAAC,CAAC,CACN,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,mBACI,KAAC,MAAM,EACL,OAAO,CAAEA,IAAK,CACd,cAAc,CAAE,wBAACkB,MAAM,QAAKA,OAAM,CAACN,IAAI,EAAC,CACxC,cAAc,CAAE,wBAACM,MAAM,QAAKA,OAAM,CAACC,SAAS,EAAE;AAAA,CAC9C,WAAW,CAAI,oCAAqC,CACpD,QAAQ,CAAEf,YAAa,EACvB,CAIV"},"metadata":{},"sourceType":"module","externalDependencies":[]}