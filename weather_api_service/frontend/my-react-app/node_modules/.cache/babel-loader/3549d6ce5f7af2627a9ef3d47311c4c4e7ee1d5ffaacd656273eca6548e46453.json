{"ast":null,"code":"import _slicedToArray from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"React\";import data from\"./data/country_data.json\";import Select from'react-select';import{jsx as _jsx}from\"react/jsx-runtime\";export default function SearchBar(){//  [query, setquery] = useState('')\n//  handleChange = (e) => {\n//     (e.target.value)\n// }\n// return (\n// <div>\n//     <form>\n// <       input type=\"search\" value={query} onChange={handleChange}/>\n//     </form>\n// </div>\n// )\nvar _React$useState=React.useState({}),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];return/*#__PURE__*/_jsx(Select,{name:\"accounts\",options:data,value:value,onChange:setValue,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionValue:function getOptionValue(option){return option.geonameid;}// It should be unique value in the options. E.g. ID\n});}// render(){\n//     const styleInfo = {\n//       paddingRight:'10px'\n//     }\n//     const items = data.map(data=>{\n//       return(\n//       <div>\n//         <ul>\n//           <li style={{position:'relative',left:'10vh'}}>\n//             <span style={styleInfo}>{data.name, data.country}</span>\n//           </li>\n//         </ul>\n//       </div>\n//       )\n//     })","map":{"version":3,"names":["useState","data","Select","SearchBar","React","value","setValue","option","name","geonameid"],"sources":["/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/src/SearchBar.js"],"sourcesContent":["import { useState } from \"React\"\nimport data from \"./data/country_data.json\"\nimport Select from 'react-select';\n\nexport default function SearchBar() {\n    //  [query, setquery] = useState('')\n    //  handleChange = (e) => {\n    //     (e.target.value)\n    // }\n    // return (\n    // <div>\n    //     <form>\n    // <       input type=\"search\" value={query} onChange={handleChange}/>\n    //     </form>\n    // </div>\n    // )\n    const [value, setValue] = React.useState({});\n    return (\n        <Select\n          name=\"accounts\"\n          options={data}\n          value={value}\n          onChange={setValue}\n          getOptionLabel={(option) => option.name}\n          getOptionValue={(option) => option.geonameid} // It should be unique value in the options. E.g. ID\n        />\n    )\n}\n\n// render(){\n//     const styleInfo = {\n//       paddingRight:'10px'\n//     }\n//     const items = data.map(data=>{\n//       return(\n//       <div>\n//         <ul>\n//           <li style={{position:'relative',left:'10vh'}}>\n//             <span style={styleInfo}>{data.name, data.country}</span>\n            \n//           </li>\n//         </ul>\n//       </div>\n//       )\n//     })\n"],"mappings":"qMAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,OAAM,KAAM,cAAc,CAAC,2CAElC,cAAe,SAASC,UAAS,EAAG,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAA0BC,KAAK,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC,oDAArCK,KAAK,qBAAEC,QAAQ,qBACtB,mBACI,KAAC,MAAM,EACL,IAAI,CAAC,UAAU,CACf,OAAO,CAAEL,IAAK,CACd,KAAK,CAAEI,KAAM,CACb,QAAQ,CAAEC,QAAS,CACnB,cAAc,CAAE,wBAACC,MAAM,QAAKA,OAAM,CAACC,IAAI,EAAC,CACxC,cAAc,CAAE,wBAACD,MAAM,QAAKA,OAAM,CAACE,SAAS,EAAE;AAAA,EAC9C,CAEV,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}