{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createClass from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _possibleConstructorReturn from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";import _inherits from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import logo from'./logo.svg';import'./App.css';import data from\"./data/country_data.json\";import Select from'react-select';import{Forecast}from'./components/forecast';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);constructor(props);{_this=_super.call(this,props);_this.state={returnedValue:{}};}var _useState=useState(false),_useState2=_slicedToArray(_useState,2),select=_useState2[0],setSelect=_useState2[1];var handleChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(selectedOptions){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://127.0.0.1:5900/forecast/\".concat(selectedOptions.name,\"/5\"),{method:\"get\"}).then(function(res){return res.json();}).then(function(data){setSelect(true);_this.setState({returnedValue:data});});case 2:case\"end\":return _context.stop();}},_callee);}));return function handleChange(_x){return _ref.apply(this,arguments);};}();return _possibleConstructorReturn(_this,/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(Select,{options:data,getOptionLabel:function getOptionLabel(option){return option.name;},getOptionValue:function getOptionValue(option){return option.geonameid;}// It should be unique value in the options. E.g. ID\n,placeholder:'Enter a city to find it\\'s weather',onChange:handleChange}),select&&/*#__PURE__*/_jsx(Forecast,{forecast:_this.state})]})}));}return _createClass(App);}(Component);export default App;","map":{"version":3,"names":["logo","data","Select","Forecast","useState","App","constructor","props","state","returnedValue","select","setSelect","handleChange","selectedOptions","fetch","name","method","then","res","json","setState","option","geonameid","Component"],"sources":["/Users/akshay/Downloads/weather_forecast_app-main/weather_api_service/weather_api_service/frontend/my-react-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport data from \"./data/country_data.json\"\nimport Select from 'react-select';\nimport { Forecast } from './components/forecast';\nimport { useState } from 'react';\n\nclass App extends Component{\n  constructor() {\n    constructor(props); {\n      super(props);\n\n      this.state = { returnedValue: {}};\n    }\n    const [select, setSelect] = useState(false);\n\n    const handleChange = async (selectedOptions) => {\n      await fetch(`http://127.0.0.1:5900/forecast/${selectedOptions.name}/5`, {\n        method: \"get\"\n      }).then(res => res.json())\n        .then((data) => {\n          setSelect(true);\n          this.setState({ returnedValue: data });\n        });\n    };\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Select\n            options={data}\n            getOptionLabel={(option) => option.name}\n            getOptionValue={(option) => option.geonameid} // It should be unique value in the options. E.g. ID\n            placeholder={'Enter a city to find it\\'s weather'}\n            onChange={handleChange} />\n          {select && <Forecast forecast={this.state} />}\n        </header>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"gkDAAA,MAAOA,KAAI,KAAM,YAAY,CAC7B,MAAO,WAAW,CAClB,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,OAAM,KAAM,cAAc,CACjC,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,QAAQ,KAAQ,OAAO,CAAC,2FAE3BC,IAAG,0FACP,cAAc,qCACZC,WAAW,CAACC,KAAK,CAAC,CAAE,CAClB,uBAAMA,KAAK,EAEX,MAAKC,KAAK,CAAG,CAAEC,aAAa,CAAE,CAAC,CAAC,CAAC,CACnC,CACA,cAA4BL,QAAQ,CAAC,KAAK,CAAC,wCAApCM,MAAM,eAAEC,SAAS,eAExB,GAAMC,aAAY,4FAAG,iBAAOC,eAAe,yIACnCC,MAAK,0CAAmCD,eAAe,CAACE,IAAI,OAAM,CACtEC,MAAM,CAAE,KACV,CAAC,CAAC,CAACC,IAAI,CAAC,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAAChB,IAAI,CAAK,CACdU,SAAS,CAAC,IAAI,CAAC,CACf,MAAKS,QAAQ,CAAC,CAAEX,aAAa,CAAER,IAAK,CAAC,CAAC,CACxC,CAAC,CAAC,sDACL,kBARKW,aAAY,4CAQjB,CAED,qDACE,YAAK,SAAS,CAAC,KAAK,uBAClB,gBAAQ,SAAS,CAAC,YAAY,wBAC5B,KAAC,MAAM,EACL,OAAO,CAAEX,IAAK,CACd,cAAc,CAAE,wBAACoB,MAAM,QAAKA,OAAM,CAACN,IAAI,EAAC,CACxC,cAAc,CAAE,wBAACM,MAAM,QAAKA,OAAM,CAACC,SAAS,EAAE;AAAA,CAC9C,WAAW,CAAE,oCAAqC,CAClD,QAAQ,CAAEV,YAAa,EAAG,CAC3BF,MAAM,eAAI,KAAC,QAAQ,EAAC,QAAQ,CAAE,MAAKF,KAAM,EAAG,GACtC,EAEL,EAEV,CAAC,2BAjCee,SAAS,EAoC3B,cAAelB,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}